#!/bin/bash

# Doesnt handle 'Stop'. Will play the queued album if the current song is
# paused.
# Partially works if the same album appears in multiple positions (also goes
# for songs of an album scattered around). The album list will be displayed but
# the currently playing album would not be highlighted.

# menu=$(mpc playlist --format '%artist% - %album%' | sort | uniq | dmenu -b -l 5 -p "Choose Album > ")
# menu=$(mpc playlist --format '%artist% - %album%' | sort | uniq | rofi -dmenu -p "Choose Album > ")
cur_album=$(mpc current -f %album%)
q_album=$(( $(mpc playlist --format '%artist% - %album%' | uniq | grep -n "$cur_album" | awk -F ":" '{ print $1 }') - 1 ))
echo $q_album
menu=$(mpc playlist --format '%artist% - %album%' | uniq | rofi -lines 15 -dmenu -p "Choose Album > " -selected-row $q_album)
if [[ -z $menu  ]];
then
    exit
fi

selection=$(mpc playlist --format '%position% %artist% - %album%' | grep "$menu" | head -1 | awk '{ print $1  }')

while true; do

    current=$(mpc current)
    playback=$(mpc status | sed -n '2p' | cut -d ' ' -f1)

    mpc idle player > /dev/null

    new_current=$(mpc current)
    new_playback=$(mpc status | sed -n '2p' | cut -d ' ' -f1)

    if [[ ${current} != ${new_current} ]]; then
        echo "Playing queued album"
        mpc play "$selection"
        break
    elif [[ ${playback} != ${new_playback} ]]; then
        echo "Status changed from ${playback} to ${new_playback}."
        echo "Will wait till the song ends before changing to the queued album"
    else
        :
    fi
done
