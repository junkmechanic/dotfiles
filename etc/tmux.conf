run-shell "powerline-daemon -q"
source '/home/ankur/.local/lib/python3.5/site-packages/powerline/bindings/tmux/powerline.conf'

# Remove Control-b as the PREFIX key and set it to be Control-a
unbind C-b
set -g prefix C-a
bind a send-prefix

# Vi key-bindings
setw -g mode-keys vi
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection

# Remove next/previous window mappings for reassignment
unbind p
unbind n

bind p paste-buffer

# moving between panes with vim movement keys
unbind-key j
bind-key -r j select-pane -D
unbind-key k
bind-key -r k select-pane -U
unbind-key h
bind-key h select-pane -L
unbind-key l
bind-key l select-pane -R
unbind-key Up

# moving between windows with vim movement keys
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

bind-key -r H swap-window -t -1
bind-key -r L swap-window -t +1

unbind '"'
unbind %
bind-key \ split-window -h -c "#{pane_current_path}"
bind-key - split-window -c "#{pane_current_path}"

# from tmux 1.9 on, the default path option was removed in favor of -c option
bind c new-window -c "#{pane_current_path}"

# This was done primarily to have display powerline properly
set-option -g default-terminal "screen-256color"
# This was done primarily to have Ctrl + <Arrow key> to skip words
set-window-option -g xterm-keys on

# Window indices will start with 1 instead of 0
set -g base-index 1

set-option -g history-limit 100000

# big time saver
set -g escape-time 0
set -g repeat-time 200

set -g display-time 3000

bind r source-file ~/.tmux.conf \; display "Reloaded!"

bind b respawn-pane -k

# Switch between current and previous windows
bind-key C-a last-window
# Switch between current and previous panes on the same window
bind-key C-q switch-client -l

# commandline colors
set -g message-bg blue

# pane border colors
set -g pane-active-border-bg blue
set -g pane-active-border-fg black
set -g pane-border-fg blue

# Swap ';' and ':' so that command prompt is easily reachable
# unbind-key :
# bind : last-pane
# unbind-key \;
# bind \; command-prompt

# Setting the title of the terminal emulator window
# T : Hostname and path
# S : Session name
# I : Window number
# P : Pane number
# W : Window name
set -g set-titles on
set -g set-titles-string "#T"

# Set the environment variable to allow tmux to use ssh-agent using
# set-environemnt. This is being set globally for tmux
# From the man page: when the tmux server is started, the environment is copied
# to tmux global env. Additionally, a session environment is also created for
# each session and for each new window, the session and global environment are
# merged.
# So before you start the tmux server, make sure the fd is in the correct
# place to avoid any errors (doesnt have to be a live link as it can be
# updated when the socket dies and a new one is created). This comes in handy
# when the socket dies and a new one is created and the existing windows need
# the new socket (check out 'fix_ssh_sock' in bin).
setenv -g SSH_AUTH_SOCK $HOME/.ssh/ssh_auth_sock
# But this is not enough as update-environemt contains SSH_AUTH_SOCK. So
# everytime a session is created or reattached to, the env vars are updated.
# This is what causes the session var SSH_AUTH_SOCK to be set from the parent
# shell process which overrides the global tmux env var.
set-option -g update-environment "DISPLAY SSH_ASKPASS SSH_AGENT_PID SSH_CONNECTION WINDOWID XAUTHORITY"

# This is useful if there are multiple simultaneous connections to the same
# session. The current window will be constrained in size only if the smaller
# client is actively viewing it.
#setw -g aggressive-resize on

# Smart pane switching with awareness of vim splits
# Without these bindings, tmux will not be able to switch back to the vim pane
# and the default tmux bindings should be used for pane switching.
# For now, I dont mind this since I would rather have the three combos that I
# often use (ctrl + [h,k,l]).
# is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
# bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
# bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
# bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
# bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
# bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Loading Tmux plugins
# Install using `git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm`
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-sidebar'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'jbnicolai/tmux-fpp'

# TPM plugin settings
set -g @continuum-restore 'on'
set -g @continuum-save-interval '1440'

# TPM shortcuts
#     - prefix + I : install new plugins
#     - prefix + U : update
# tmux-resurrect :
#     - prefix + Ctrl + s : save sessions
#     - prefix + Ctrl + r : restore sessions
# tmux-yank :
#     - prefix + y : copy current cmd line to clipboard
#     - prefix + Y : copy current pane's pwd to clipboard
#   In copy mode :
#     - prefix + y : copy selection to clipboard
#     - prefix + Y : put selection on the cmd line without copying it
# tmux-copycat :
#     - prefix + / : search a regex
#     - prefix + ctrl-f : file search
#     - prefix + ctrl-g : git status files (preferably after 'git status')
#     - prefix + alt-f  : git commit hash (preferably after 'git log')
#     - prefix + ctrl-u : urls
#     - prefix + ctrl-d : numbers
#     - prefix + alt-i  : ip addresses

# Initializes TMUX plugin manager.
# Keep this line at the very bottom of tmux.conf.
run-shell '~/.tmux/plugins/tpm/tpm'
## -----------------------Nothing Beyond This Line--------------------------##
