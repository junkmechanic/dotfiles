#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#
# Repo URL
# git clone --recursive https://github.com/sorin-ionescu/prezto.git "${ZDOTDIR:-$HOME}/.zprezto"
#
# Extra plugins to go in `~/.zprezto/modules`
# git clone https://github.com/psprint/zsh-navigation-tools.git "${ZDOTDIR:-$HOME}/.zprezto/modules/zsh-navigation-tools"
# git clone https://github.com/hlissner/zsh-autopair.git "${ZDOTDIR:-$HOME}/.zprezto/modules/zsh-autopair"

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Customize to your needs...
# alias vim="nvim"
alias catn="cat -n"
alias cd..="cd .."
alias duall="du -shc .[!.]* *"
alias gita="git add"
alias gita.="git add ."
alias gitc="git commit"
alias gitcam="git commit --amend --no-edit"
alias gitd="git diff"
alias gitds="git diff --staged"
alias gitl="git log --oneline -1"
alias gitrpo="git remote prune origin"
alias gitrso="git remote show origin"
alias gits="git status"
alias gt='cd $(git rev-parse --show-toplevel 2>/dev/null || (echo "."; echo "Not within a git repository" >&2))'
alias killmosh='pgrep -u "$USER" mosh-server | tr " " "\n" | grep -v "$PPID" | xargs kill'
alias ll="ls -AlhF"
alias ls="lsd"
alias pipgrep="pip freeze | grep"
alias psgrep="ps aux | grep -v grep | grep"
alias rsync="noglob rsync --human-readable --partial --progress --rsh=ssh"
alias sl="ls"
alias tmat="tmux attach"
alias tmgn="tmux new-session -s JUNK"
alias tmux="tmux -2"
alias vim='nvim'
alias vimdiff='nvim -d'
alias vimo="nvim -O"
alias vimp="nvim -p"
# Neovim Remote Activation
if [ -n "${NVIM_LISTEN_ADDRESS}" ]; then
  alias vims='nvr -o'
  alias vimv='nvr -O'
  alias vimt='nvr --remote-tab'
fi
export PATH="$PATH:$HOME/.local/bin"

export MANPAGER='nvim +Man!'

# keybindings for history-substring-search
# bind P and N for EMACS mode
bindkey -M emacs '^P' history-substring-search-up
bindkey -M emacs '^N' history-substring-search-down
# bind k and j for VI mode
bindkey -M vicmd 'k' history-substring-search-up
bindkey -M vicmd 'j' history-substring-search-down

# keybindings for zsh-navigation-tools
# removing binding for znt-history-widget as fzf is used for this
bindkey -r '^[r'
zle -N znt-cd-widget
bindkey '^[w' znt-cd-widget
znt_cd_hotlist=(
    ~/devbench
    ~/.files
    ~/downloads
)

# pyenv
eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"
source $(pyenv root)/completions/pyenv.zsh

# accept and execute the current suggestion with ctrl+space
bindkey '^ ' autosuggest-execute

# to view path in readable format
path() {
    # old=$IFS
    local IFS=:
    pth=($=PATH)
    printf "%s\n" $pth
    # IFS=$old
}

mkcd() {
    if [ ! -n "$1" ]; then
        echo "Enter a directory name"
    elif [ -d $1 ]; then
        echo "$1 already exists"
    else
        mkdir -p $1 && cd $1
    fi
}

# zle custom functions

function _git_status_zle {
    zle kill-whole-line
    git status
    zle accept-line
}
zle -N _git_status_zle
bindkey '\es' _git_status_zle

function _git_diff_zle {
    zle kill-whole-line
    git diff
    zle accept-line
}
zle -N _git_diff_zle
bindkey '\ez' _git_diff_zle

# fzf configuration
# git@github.com:junegunn/fzf.git
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# git commit browser
function _git_log_zle {
  git rev-parse HEAD > /dev/null 2>&1 || return

  local _gitLogLineToHash="echo {} | grep -o '[a-f0-9]\{7\}' | head -1"
  local _viewGitLogLine="$_gitLogLineToHash | xargs -I % sh -c 'git show --color=always %'"
  local _viewGitLogLineShort="$_gitLogLineToHash | xargs -I % sh -c 'git show --color=always --stat %'"

  git log --graph --color=always \
    --format="%C(auto)%h%d %s %C(black)%C(bold)%cr% C(auto)%an" "$@" |
  fzf --no-sort --reverse --tiebreak=index --no-multi \
    --ansi --preview="$_viewGitLogLineShort" --preview-window=down \
    --bind "enter:execute:$_viewGitLogLine | less -R && print $_gitLogLineToHash"
}

function _git_log_zsh_wrapper {
    zle kill-whole-line
    _git_log_zle
    zle accept-line
}
zle -N _git_log_zsh_wrapper
bindkey '\ea' _git_log_zsh_wrapper

# command history search
__fzfcmd() {
  [ -n "$TMUX_PANE" ] && { [ "${FZF_TMUX:-0}" != 0 ] || [ -n "$FZF_TMUX_OPTS" ]; } &&
    echo "fzf-tmux ${FZF_TMUX_OPTS:--d${FZF_TMUX_HEIGHT:-40%}} -- " || echo "fzf"
}

fzf-history-widget() {
  local selected num
  setopt localoptions noglobsubst noposixbuiltins pipefail no_aliases 2> /dev/null
  selected=( $(fc -rl 1 | perl -ne 'print if !$seen{($_ =~ s/^\s*[0-9]+\s+//r)}++' |
    FZF_DEFAULT_OPTS="--height ${FZF_TMUX_HEIGHT:-40%} $FZF_DEFAULT_OPTS -n2..,.. --tiebreak=index --bind=ctrl-r:toggle-sort $FZF_CTRL_R_OPTS --query=${(qqq)LBUFFER} +m" $(__fzfcmd)) )
  local ret=$?
  if [ -n "$selected" ]; then
    num=$selected[1]
    if [ -n "$num" ]; then
      zle vi-fetch-history -n $num
    fi
  fi
  zle reset-prompt
  return $ret
}
zle     -N   fzf-history-widget
bindkey '^R' fzf-history-widget

# edit a file under the current dir tree
ve() {
  local files
  local IFS=$'\n' files=($(fzf-tmux --query="$1" --multi --select-1 --preview '
    [[ $(file --mime {}) =~ binary ]] && echo {} is a binary file ||
    (highlight -O ansi -l {} || cat {}) 2> /dev/null | head -100' \
    --bind 'ctrl-n:page-down,ctrl-p:page-up,alt-j:preview-page-down,alt-k:preview-page-up'))
  [[ -n "$files" ]] && vim -- "${files[@]}"
  print "$files"
}

# open after searching pattern in the file
vg() {
  local file
  local line

  read -r file line <<<"$(grep -irn $@ . | \
      fzf-tmux --bind 'ctrl-n:page-down,ctrl-p:page-up' | \
      awk -F: '{print $1, $2}')"

  if [[ -n "$file" ]]
  then
     vim "$file" +"$line"
     print "$file" at "$line"
  fi
}

# change to directory under the given or current directory
fd() {
  local dir
  dir=$(find ${1:-.} -path '*/\.*' -prune \
                  -o -type d -print 2> /dev/null | fzf-tmux +m) &&
  cd "$dir"
}
